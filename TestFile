import React from 'react';
import { createRoot } from 'react-dom/client';

const App = () => {
  return (
    <div className="flex flex-col min-h-screen bg-gray-950 text-white font-sans">
      {/* Header/Nav */}
      <header className="fixed top-0 left-0 right-0 z-50 p-4 sm:p-6 lg:p-8 backdrop-blur-sm bg-black bg-opacity-30">
        <nav className="flex items-center justify-between max-w-7xl mx-auto">
          <div className="text-xl font-bold tracking-wide">FLUTTERTOP</div>
          <div className="hidden sm:flex space-x-6 lg:space-x-10 text-sm lg:text-base font-medium">
            <a href="#" className="p-2 rounded-full px-4 text-white hover:bg-gray-800 transition-colors">Home</a>
            <a href="#" className="p-2 rounded-full px-4 text-gray-400 hover:text-white transition-colors">About</a>
            <a href="#" className="p-2 rounded-full px-4 text-gray-400 hover:text-white transition-colors">Blog</a>
            <a href="#" className="p-2 rounded-full px-4 text-gray-400 hover:text-white transition-colors">Contact</a>
          </div>
          <a href="#" className="p-2 rounded-full px-4 text-white bg-white bg-opacity-10 hover:bg-opacity-20 transition-colors">Sign in</a>
        </nav>
      </header>

      {/* Main Content Section */}
      <main className="flex-1 flex flex-col items-center justify-center p-4 text-center mt-16 sm:mt-24 lg:mt-32">
        <h1 className="text-4xl sm:text-5xl lg:text-7xl font-bold tracking-tight mb-4 animate-fade-in-up-1">
          Create Powerful AI art or
          <br />
          image in seconds
        </h1>
        <p className="max-w-xl text-gray-400 text-base sm:text-lg mb-8 sm:mb-12 animate-fade-in-up-2">
          Create amazing images effortlessly with AI technology. Just share your ideas, and watch them come to life in seconds!
        </p>
        <button className="flex items-center space-x-2 px-8 py-3 bg-white bg-opacity-20 text-white font-medium rounded-full hover:bg-opacity-30 transition-all duration-300 transform hover:scale-105 shadow-lg animate-fade-in-up-3">
          <span>Generate</span>
          <svg className="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
            <path strokeLinecap="round" strokeLinejoin="round" strokeWidth="2" d="M9 5l7 7-7 7"></path>
          </svg>
        </button>
      </main>

      {/* Grid of Images Section */}
      <section className="p-4 sm:p-8 mt-auto">
        <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4 max-w-7xl mx-auto">
          {/* Card 1 */}
          <div className="relative rounded-2xl overflow-hidden shadow-xl group cursor-pointer transform transition-transform duration-300 hover:scale-105">
            <img src="https://placehold.co/400x500/0f172a/fff?text=Image+1" alt="AI Generated Art" className="w-full h-full object-cover" />
            <div className="absolute inset-0 bg-gradient-to-t from-gray-950 via-transparent to-transparent opacity-80"></div>
            <div className="absolute bottom-4 left-4 right-4 text-white text-left">
              <div className="flex items-center space-x-2 mb-1">
                <img src="https://placehold.co/32x32/1f2937/fff" alt="User Avatar" className="w-8 h-8 rounded-full border border-gray-700" />
                <span className="text-sm font-semibold">Leslie Alexander</span>
              </div>
              <div className="flex items-center text-yellow-400">
                <svg className="w-4 h-4 mr-1" fill="currentColor" viewBox="0 0 20 20"><path d="M9.049 2.927c.3-.921 1.603-.921 1.902 0l1.07 3.292a1 1 0 00.95.69h3.462c.969 0 1.371 1.24.588 1.81l-2.8 2.034a1 1 0 00-.364 1.118l1.07 3.292c.3.921-.755 1.688-1.54 1.118l-2.8-2.034a1 1 0 00-1.175 0l-2.8 2.034c-.784.57-1.838-.197-1.539-1.118l1.07-3.292a1 1 0 00-.364-1.118L2.98 8.72c-.783-.57-.38-1.81.588-1.81h3.462a1 1 0 00.95-.69l1.07-3.292z"></path></svg>
                <span className="text-sm text-gray-300">5.0</span>
              </div>
            </div>
          </div>

          {/* Card 2 - Example of another card */}
          <div className="relative rounded-2xl overflow-hidden shadow-xl group cursor-pointer transform transition-transform duration-300 hover:scale-105">
            <img src="https://placehold.co/400x500/0f172a/fff?text=Image+2" alt="AI Generated Art" className="w-full h-full object-cover" />
            <div className="absolute inset-0 bg-gradient-to-t from-gray-950 via-transparent to-transparent opacity-80"></div>
            <div className="absolute bottom-4 left-4 right-4 text-white text-left">
              <span className="text-sm font-semibold">John Doe</span>
            </div>
          </div>
          
          {/* Card 3 - Example of another card */}
          <div className="relative rounded-2xl overflow-hidden shadow-xl group cursor-pointer transform transition-transform duration-300 hover:scale-105">
            <img src="https://placehold.co/400x500/0f172a/fff?text=Image+3" alt="AI Generated Art" className="w-full h-full object-cover" />
            <div className="absolute inset-0 bg-gradient-to-t from-gray-950 via-transparent to-transparent opacity-80"></div>
            <div className="absolute bottom-4 left-4 right-4 text-white text-left">
              <span className="text-sm font-semibold">Jane Smith</span>
            </div>
          </div>

          {/* Prompt card from the image */}
          <div className="relative rounded-2xl overflow-hidden shadow-xl group cursor-pointer transform transition-transform duration-300 hover:scale-105 bg-gray-900 flex flex-col justify-between">
            <div className="p-6">
              <div className="flex items-center justify-between mb-2">
                <span className="font-bold text-base">Prompt</span>
                <svg className="w-5 h-5 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg"><path strokeLinecap="round" strokeLinejoin="round" strokeWidth="2" d="M14 5l7 7m0 0l-7 7m7-7H3"></path></svg>
              </div>
              <p className="text-sm text-gray-400">
                Create a futuristic cityscape at dusk with neon skyscrapers, flying cars, and a lively digital market.
              </p>
            </div>
          </div>
        </div>
      </section>

      {/* Floating Buttons */}
      <div className="fixed top-1/2 left-4 transform -translate-y-1/2 hidden sm:block">
        <button className="p-2 mb-2 rounded-full bg-white bg-opacity-20 text-white hover:bg-opacity-30 transition-colors">
          <svg className="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg"><path strokeLinecap="round" strokeLinejoin="round" strokeWidth="2" d="M15 10l4.553-2.276A1 1 0 0121 8.618v6.764a1 1 0 01-1.447.894L15 14M5 18h.01M5 21h.01M5 15h.01M12 18h.01M12 21h.01M12 15h.01M19 18h.01M19 21h.01M19 15h.01M5 12h.01M5 9h.01M5 6h.01M12 12h.01M12 9h.01M12 6h.01M19 12h.01M19 9h.01M19 6h.01"></path></svg>
        </button>
      </div>
      <div className="fixed top-1/2 right-4 transform -translate-y-1/2 hidden sm:block">
        <button className="p-2 mb-2 rounded-full bg-white bg-opacity-20 text-white hover:bg-opacity-30 transition-colors">
          <svg className="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg"><path strokeLinecap="round" strokeLinejoin="round" strokeWidth="2" d="M12 10v6m0 0l-3-3m3 3l3-3m2 8H7a2 2 0 01-2-2v-5a2 2 0 012-2h10a2 2 0 012 2v5a2 2 0 01-2 2z"></path></svg>
        </button>
      </div>

      {/* Animation Styles */}
      <style>
        {`
          @keyframes fadeIn {
            from {
              opacity: 0;
            }
            to {
              opacity: 1;
            }
          }
          @keyframes fadeInUp {
            from {
              opacity: 0;
              transform: translateY(20px);
            }
            to {
              opacity: 1;
              transform: translateY(0);
            }
          }
          .animate-fade-in-up-1 {
            animation: fadeInUp 0.8s ease-out forwards;
            animation-delay: 0.2s;
            opacity: 0;
          }
          .animate-fade-in-up-2 {
            animation: fadeInUp 0.8s ease-out forwards;
            animation-delay: 0.4s;
            opacity: 0;
          }
          .animate-fade-in-up-3 {
            animation: fadeInUp 0.8s ease-out forwards;
            animation-delay: 0.6s;
            opacity: 0;
          }
        `}
      </style>
    </div>
  );
};

export default App;

// The issue seems to be with how the React app is initialized in some environments.
// We'll use a slightly different approach that ensures the root element exists
// before we try to render the app into it.
const container = document.getElementById('root');
if (container) {
  const root = createRoot(container);
  root.render(<App />);
} else {
  console.error('Failed to find the root element to render the React app.');
}
